.text-input-container {
  @extend .flex-full-width;
  @extend .flex-column;
  gap: $size-6;

  .text-input {
    @extend .flex-full-width;
    @extend .flex-center-vertical;
    border: 1px solid $dark-gray-300;
    padding: 10px 14px;
    border-radius: 100px;
    min-height: 44px;
    box-sizing: border-box;
    max-height: 44px;
    transition: border-color 0.5s ease, outline 0.5s ease;

    &:has(input:disabled),
    &:has(textarea:disabled) {
      background-color: $dark-gray-400 !important;
    }

    &:focus-within {
      border-color: $white !important;
      outline: 4px solid rgba(249, 243, 236, 0.2);
    }

    &:focus-within.error {
      border-color: $error-400 !important;
      outline: 4px solid rgba(255, 22, 9, 0.2);
    }

    &:not(:focus-within).filled {
      border-color: $light-gray-400 !important;
    }

    &:not(:focus-within).error {
      border-color: $error-400 !important;
    }
    &:not(:focus-within).error.filled {
      border-color: $error-500 !important;
    }

    > input {
      @extend .b2-400;
      background-color: transparent;
      border: none;
      outline: none;
      color: $white;
      flex: 1;

      &::placeholder {
        color: $light-gray-300;
      }
      &::-webkit-inner-spin-button,
      .number-input::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }
      input[type="number"]::-webkit-inner-spin-button,
      input[type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }
    }

    //textarea

    &.textarea {
      border-radius: $size-20;
      min-height: 128px;
      max-height: 128px;
    }

    > textarea {
      @extend .b2-400;
      background-color: transparent;
      border: none;
      outline: none;
      color: $white;
      flex: 1;
      resize: none;
      height: 100%;

      &::placeholder {
        color: $light-gray-300;
      }
    }

    //link

    &.link {
      padding-top: 0;
      padding-bottom: 0;
      border-left: 1px solid $dark-gray-300 !important;
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      > input {
        height: 100%;
      }
    }
  }
  .hint {
    @extend .b3-400;
    color: $light-gray-400;
    &.error {
      color: $error-500;
    }
  }
  .link-input-main {
    @extend .flex-full-width;
    @extend .flex-center-vertical;
    border: 1px solid $dark-gray-300;
    border-radius: 100px;
    min-height: 44px;
    box-sizing: border-box;
    max-height: 44px;
    transition: border-color 0.5s ease, outline 0.5s ease;
    &:has(input:disabled) {
      background-color: $dark-gray-400 !important;
      > .text-input {
        background-color: transparent !important;
      }
    }
    &:focus-within.error {
      border-color: $error-400 !important;
    }

    &:not(:focus-within).filled {
      border-color: $light-gray-400 !important;
    }

    &:not(:focus-within).error {
      border-color: $error-400 !important;
    }
    &:not(:focus-within).error.filled {
      border-color: $error-500 !important;
    }

    .link-default-text {
      @extend .b2-400;
      padding: $size-10 $size-12 $size-10 $size-14;
      color: $light-gray-300;
    }
  }
}

.input-label {
  @extend .b3-500;
  color: $white;

  &.required-label {
    position: relative;
    &::after {
      position: relative;
      content: "*";
      color: $error-500;
      margin-left: $size-4;
    }
  }
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  -webkit-background-clip: text !important;
  -webkit-text-fill-color: $white !important;
  transition: background-color 5000s ease-in-out 0s !important;
  box-shadow: inset 0 0 20px 20px transparent !important;
}

input:-webkit-autofill {
  box-shadow: inset 0 0 20px 20px transparent !important;
}
